C51 COMPILER V9.52.0.0   ADC_BG_VDD_AVG                                                    01/16/2018 13:38:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC_BG_VDD_AVG
OBJECT MODULE PLACED IN .\Output\ADC_BG_VDD_avg.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\ADC_BG_VDD_avg.c OPTIMIZE(4,SPEED) BROWSE INCDIR(..\..\Include) DEFINE
                    -(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\ADC_BG_VDD_avg.lst) TABS(2) OBJECT(.\Output\ADC_BG_VDD_avg.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E885 ADC demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "SFR_Macro.h"
  20          #include "Function_define.h"
  21          #include "Common.h"
  22          #include "Delay.h"
  23          
  24          
  25          //*****************  The Following is in define in Fucntion_define.h  ***************************
  26          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  27          //***********************************************************************************************
  28          #if 0
              //#define Enable_ADC_AIN0     ADCCON0&=0xF0;P17_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT0;ADCCON1|=SET_BIT0 
             -                //P17
              //#define Enable_ADC_AIN1     ADCCON0&=0xF0;ADCCON0|=0x01;P30_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT1;ADCC
             -ON1|=SET_BIT0    //P30
              //#define Enable_ADC_AIN2     ADCCON0&=0xF0;ADCCON0|=0x02;P07_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT2;ADCC
             -ON1|=SET_BIT0    //P07
              //#define Enable_ADC_AIN3     ADCCON0&=0xF0;ADCCON0|=0x03;P06_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT3;ADCC
             -ON1|=SET_BIT0    //P06
              //#define Enable_ADC_AIN4     ADCCON0&=0xF0;ADCCON0|=0x04;P05_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT4;ADCC
             -ON1|=SET_BIT0    //P05
              //#define Enable_ADC_AIN5     ADCCON0&=0xF0;ADCCON0|=0x05;P04_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT5;ADCC
             -ON1|=SET_BIT0    //P04
              //#define Enable_ADC_AIN6     ADCCON0&=0xF0;ADCCON0|=0x06;P03_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT6;ADCC
             -ON1|=SET_BIT0    //P03
              //#define Enable_ADC_AIN7     ADCCON0&=0xF0;ADCCON0|=0x07;P11_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT7;ADCC
             -ON1|=SET_BIT0    //P11
              //#define Enable_ADC_BandGap  ADCCON0|=SET_BIT3;ADCCON0&=0xF8;                                                              //Band-gap 1.2
C51 COMPILER V9.52.0.0   ADC_BG_VDD_AVG                                                    01/16/2018 13:38:34 PAGE 2   

             -2V
              
              //#define PWM0_FALLINGEDGE_TRIG_ADC   ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SE
             -T_BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_FALLINGEDGE_TRIG_ADC   ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM4_FALLINGEDGE_TRIG_ADC   ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM0_RISINGEDGE_TRIG_ADC    ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_
             -BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_RISINGEDGE_TRIG_ADC    ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              //#define PWM4_RISINGEDGE_TRIG_ADC    ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              
              //#define P04_FALLINGEDGE_TRIG_ADC    ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1&=~SET_BIT6
              //#define P13_FALLINGEDGE_TRIG_ADC    ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1|=SET_BIT6
              //#define P04_RISINGEDGE_TRIG_ADC     ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1&=~SET_BIT6
              //#define P13_RISINGEDGE_TRIG_ADC     ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1|=SET_BIT6
              #endif
  51          
  52          
  53          double  Bandgap_Voltage,VDD_Voltage;      //please always use "double" mode for this
  54          char ADCdataH[5], ADCdataL[5];
  55          int ADCsumH=0, ADCsumL=0;
  56          unsigned char ADCavgH,ADCavgL;
  57              
  58          void ADC_Bypass (void)
  59          {
  60   1          unsigned char ozc;
  61   1          for (ozc=0;ozc<0x05;ozc++)
  62   1          {
  63   2            clr_ADCF;
  64   2            set_ADCS;
  65   2            while(ADCF == 0);
  66   2          }
  67   1      }
  68              
  69          void READ_BANDGAP()
  70          {
  71   1          UINT8 BandgapHigh,BandgapLow;
  72   1          double Bandgap_Value;
  73   1        
  74   1          set_IAPEN;
  75   1          IAPAL = 0x0C;
  76   1          IAPAH = 0x00;
  77   1          IAPCN = READ_UID;
  78   1          set_IAPGO;
  79   1          BandgapHigh = IAPFD;
  80   1          IAPAL = 0x0d;
  81   1          IAPAH = 0x00;
  82   1          IAPCN = READ_UID;
  83   1          set_IAPGO;
  84   1          BandgapLow = IAPFD;
  85   1          BandgapLow = BandgapLow&0x0F;
  86   1          clr_IAPEN;
  87   1          Bandgap_Value = (BandgapHigh<<4)+BandgapLow;
  88   1          Bandgap_Voltage = 3072/(0x0fff/Bandgap_Value);
  89   1      }
  90                
C51 COMPILER V9.52.0.0   ADC_BG_VDD_AVG                                                    01/16/2018 13:38:34 PAGE 3   

  91          /******************************************************************************
  92          The main C function.  Program execution starts
  93          here after stack initialization.
  94          ******************************************************************************/
  95          void main (void) 
  96          {
  97   1      
  98   1          double bgvalue;
  99   1          unsigned int i;
 100   1          set_CLOEN;
 101   1          P12_Quasi_Mode;                           //For GPIO1 output, Find in "Function_define.h" - "GPIO INIT"
 102   1          InitialUART0_Timer1(115200);
 103   1      //  while(1)
 104   1      //    Send_Data_To_UART0(0x55);
 105   1          READ_BANDGAP();
 106   1          Enable_ADC_BandGap;                       //Find in "Function_define.h" - "ADC INIT"
 107   1          ADC_Bypass();
 108   1      
 109   1          for(i=0;i<5;i++)
 110   1          {
 111   2            Timer0_Delay1ms(3);
 112   2            clr_ADCF;
 113   2            set_ADCS;                 // ADC start trig signal
 114   2            while(ADCF == 0);
 115   2            ADCdataH[i] = ADCRH;
 116   2            ADCdataL[i] = ADCRL;
 117   2       
 118   2          }   
 119   1          
 120   1          for(i=0;i<5;i++)
 121   1          {
 122   2            ADCsumH = ADCsumH + ADCdataH[i];
 123   2            ADCsumL = ADCsumL + ADCdataL[i];
 124   2          }       
 125   1      
 126   1          ADCavgH = ADCsumH/5;
 127   1          ADCavgL = ADCsumL/5;
 128   1              printf ("\n ADCavgH = %bX", ADCavgH); 
 129   1            printf ("\n ADCavgL = %bX", ADCavgL);
 130   1          bgvalue = (ADCavgH<<4) + ADCavgL;
 131   1          VDD_Voltage = (0x1000/bgvalue)*Bandgap_Voltage;
 132   1          printf ("\n Bandgap voltage = %e", Bandgap_Voltage); 
 133   1          printf ("\n VDD voltage = %e", VDD_Voltage); 
 134   1          while(1);
 135   1      }
 136          
 137          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    494    ----
   CONSTANT SIZE    =     74    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
