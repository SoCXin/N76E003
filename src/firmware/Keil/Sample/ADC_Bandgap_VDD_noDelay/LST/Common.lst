C51 COMPILER V9.52.0.0   COMMON                                                            01/23/2018 17:46:10 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\Common\Common.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\Include) DEFINE
                    -(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Common.lst) TABS(2) OBJECT(.\Output\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #include "N76E003.h"
  15          #include "Common.h"
  16          #include "Delay.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          
  20          UINT8 hircmap0,hircmap1;
  21          UINT16 trimvalue16bit;
  22          
  23          
  24          //----------------------------------------------------------------------------------
  25          // UART0 baud rate initial setting 
  26          //----------------------------------------------------------------------------------
  27          void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  28          {
  29   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  30   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  31   1        
  32   1          SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  33   1          TMOD |= 0x20;     //Timer1 Mode1
  34   1          
  35   1          set_SMOD;         //UART0 Double Rate Enable
  36   1          set_T1M;
  37   1          clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  38   1       
  39   1      #ifdef FOSC_160000
  40   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  41   1      #endif      
  42   1      #ifdef FOSC_166000
                  TH1 = 256 - (1037500/u32Baudrate);                 /*16.6 MHz */
              #endif
  45   1          set_TR1;
  46   1          set_TI;           //For printf function must setting TI = 1
  47   1      }
C51 COMPILER V9.52.0.0   COMMON                                                            01/23/2018 17:46:10 PAGE 2   

  48          //---------------------------------------------------------------
  49          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  50          {
  51   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  52   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
  53   1        
  54   1          SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  55   1          set_SMOD;        //UART0 Double Rate Enable
  56   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  57   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  58   1      
  59   1      #ifdef FOSC_160000
  60   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  61   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  62   1      #endif
  63   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
              #endif
  67   1          set_TR3;         //Trigger Timer3
  68   1      //    set_TI;          //For printf function must setting TI = 1
  69   1      }
  70          
  71          UINT8 Receive_Data_From_UART0(void)
  72          {
  73   1          UINT8 c;
  74   1          while (!RI);
  75   1          c = SBUF;
  76   1          RI = 0;
  77   1          return (c);
  78   1      }
  79          
  80          void Send_Data_To_UART0 (UINT8 c)
  81          {
  82   1          TI = 0;
  83   1          SBUF = c;
  84   1          while(TI==0);
  85   1      }
  86          
  87          
  88          //----------------------------------------------------------------------------------
  89          // UART1 baud rate initial setting 
  90          //----------------------------------------------------------------------------------
  91          void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  92          {
  93   1          P02_Input_Mode;   //Setting RXD_1 pin as Input mode for transmit
  94   1          P16_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  95   1        
  96   1      //    SCON_1 = 0x50;    //UART1 Mode1,REN_1=1,TI_1=1
  97   1      //    T3CON = 0x08;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
  98   1      
  99   1          SCON_1 = 0x52;    //UART1 Mode1,REN_1=1,TI_1=1
 100   1          T3CON = 0xF8;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 101   1      
 102   1      #ifdef FOSC_160000
 103   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz offset*/
 104   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz offset*/
 105   1      #endif
 106   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
              #endif
C51 COMPILER V9.52.0.0   COMMON                                                            01/23/2018 17:46:10 PAGE 3   

 110   1          set_TR3;            //Trigger Timer3
 111   1      //    set_TI_1;          //For printf function must setting TI = 1
 112   1      }
 113          
 114          UINT8 Receive_Data_From_UART1(void)
 115          {
 116   1          UINT8 c;
 117   1          
 118   1          while (!RI_1);
 119   1          c = SBUF_1;
 120   1          RI_1 = 0;
 121   1          return (c);
 122   1      }
 123          
 124          void Send_Data_To_UART1 (UINT8 c)
 125          {
 126   1          TI_1 = 0;
 127   1          SBUF_1 = c;
 128   1          while(TI_1==0);
 129   1      }
 130          /*==========================================================================*/
 131          
 132          /****************************************************************************/
 133          /* Before call software reset function, please first confirm PCON define 
 134          /* Boot from APROM or LDROM
 135          /****************************************************************************/
 136          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 144          /*==========================================================================*/
 145          
 146          /****************************************************************************/
 147          /* If call this macro, Please Modify option -> Preproceessing Symbols
 148          /* -> Define From ""FOSC_160000" to "FOSC_166000"
 149          /****************************************************************************/
 150          void MODIFY_HIRC_166(void)
 151          {
 152   1          set_IAPEN;
 153   1          IAPAL = 0x30;
 154   1          IAPAH = 0x00;
 155   1          IAPCN = READ_UID;
 156   1          set_IAPGO;
 157   1          hircmap0 = IAPFD;
 158   1          IAPAL = 0x31;
 159   1          IAPAH = 0x00;
 160   1          set_IAPGO;
 161   1          hircmap1 = IAPFD;
 162   1          clr_IAPEN;
 163   1          trimvalue16bit = ((hircmap0<<1)+(hircmap1&0x01));
 164   1          trimvalue16bit = trimvalue16bit - 15;
 165   1          hircmap1 = trimvalue16bit&0x01;
 166   1          hircmap0 = trimvalue16bit>>1;
 167   1          TA=0XAA;
 168   1          TA=0X55;
 169   1          RCTRIM0 = hircmap0;
 170   1          TA=0XAA;
 171   1          TA=0X55;
C51 COMPILER V9.52.0.0   COMMON                                                            01/23/2018 17:46:10 PAGE 4   

 172   1          RCTRIM1 = hircmap1;
 173   1      }
 174          /*==========================================================================*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    476    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
