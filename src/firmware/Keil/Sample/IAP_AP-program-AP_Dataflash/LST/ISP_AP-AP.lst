C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_AP_AP
OBJECT MODULE PLACED IN .\Output\ISP_AP-AP.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\ISP_AP-AP.c BROWSE INCDIR(..\..\Include) DEFINE(FOSC_221184) DEBUG OBJ
                    -ECTEXTEND PRINT(.\LST\ISP_AP-AP.lst) TABS(2) OBJECT(.\Output\ISP_AP-AP.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E885 APROM program APROM demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include <stdio.h>
  19          #include "N76E885.h"
  20          #include "Version.h"
  21          #include "Typedef.h"
  22          #include "Define.h"
  23          #include "SFR_Macro.h"
  24          #include "Common.h"
  25          #include "Delay.h"
  26          
  27          /*
  28          //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  29          //
  30          ////<e0> System Clock Source Configuration
  31          // <o1> System Clock Source Selection
  32          //      <0=> 2~25MHz    XTAL
  33          //      <1=> 32.768KHz  XTAL
  34          //      <2=> 22.1184MHz Internal
  35          //      <3=> 10KHz      Internal
  36          //      <4=> OSC-In     External
  37          //</e>
  38          //
  39          //<e2> Clock Divider Configuration
  40          //     <o3.0..7>  System Clock Source Devider <1-255>
  41          //                     <i> Fsys = (System Clock Source) / (2 * Devider)
  42          //</e>
  43          //
  44          //-------- <<< end of configuration section >>> ------------------------------
  45          */
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 2   

  46          
  47          #define     SYS_CLK_EN          0
  48          #define     SYS_SEL             2
  49          #define     SYS_DIV_EN          0                   //0: Fsys=Fosc, 1: Fsys = Fosc/(2*CKDIV)
  50          #define     SYS_DIV             1
  51          
  52          #define     CID_READ            0x0B
  53          #define     DID_READ            0x0C
  54          #define     CFG_READ            0xC0
  55          #define     CFG_ERASE           0xE2
  56          
  57          #define     PAGE_ERASE_AP       0x22
  58          #define     BYTE_READ_AP        0x00
  59          #define     BYTE_PROGRAM_AP     0x21
  60          
  61          #define     BYTE_PROGRAM_CFG    0xE1
  62          #define     BYTE_READ_CFG       0xC0
  63          
  64          #define     PAGE_SIZE           128
  65          
  66          #define     DATA_SIZE           4096   
  67          #define     DATA_START_ADDR     0x3800 //(0x4800-0x1000)
  68          
  69          #define     ERASE_FAIL          0x70
  70          #define     PROGRAM_FAIL        0x71
  71          #define     IAPFF_FAIL          0x72
  72          #define     IAP_PASS            0x00
  73          
  74          #define     DISPLAY_LED         P3
  75          bit BIT_TMP;
  76          
  77          //--------------------------------------------------------------------------------------------------------
             ----
  78          void Enable_IAP_Mode(void)
  79          {   
  80   1          set_IAPEN;
  81   1      }
  82          //--------------------------------------------------------------------------------------------------------
             ----
  83          void Disable_IAP_Mode(void)
  84          {   
  85   1          clr_IAPEN;
  86   1      }
  87          //--------------------------------------------------------------------------------------------------------
             ----
  88          void Trigger_IAP(void)
  89          {   
  90   1          set_IAPGO;                                  //trigger IAP
  91   1          if((CHPCON&SET_BIT6)==SET_BIT6)             //check IAPFF (CHPCON.6)
  92   1          {
  93   2              DISPLAY_LED = IAPFF_FAIL;
  94   2              printf ("\n*  IAPFF = 1.");
  95   2              while(1);
  96   2          }
  97   1      }
  98          //--------------------------------------------------------------------------------------------------------
             ----
  99          void ID_Read(UINT8 *pu8CID,UINT8 *pu8DID0,UINT8 *pu8DID1)
 100          {   
 101   1          Enable_IAP_Mode();
 102   1      
 103   1          //Read CID
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 3   

 104   1          IAPAL = 0x00;
 105   1          IAPAH = 0x00;
 106   1          IAPCN = CID_READ;
 107   1          Trigger_IAP();
 108   1          
 109   1          *pu8CID = IAPFD;
 110   1      
 111   1          //Read DID0
 112   1          IAPCN = DID_READ;
 113   1          Trigger_IAP();
 114   1          *pu8DID0 = IAPFD;
 115   1      
 116   1          //Read DID1
 117   1          IAPAL ++;
 118   1          IAPCN = DID_READ;
 119   1          Trigger_IAP();
 120   1          *pu8DID1 = IAPFD;
 121   1      
 122   1          Disable_IAP_Mode();
 123   1      }
 124          //--------------------------------------------------------------------------------------------------------
             ----
 125          void CONFIG_Read(UINT8 *pu8CFG0,UINT8 *pu8CFG1,UINT8 *pu8CFG2,UINT8 *pu8CFG3,UINT8 *pu8CFG4)
 126          {   
 127   1          Enable_IAP_Mode();
 128   1      
 129   1          //Read CONFIG0
 130   1          IAPAL = 0x00;
 131   1          IAPAH = 0x00;
 132   1          IAPCN = CFG_READ;
 133   1          Trigger_IAP();
 134   1          *pu8CFG0 = IAPFD;
 135   1      
 136   1          //Read CONFIG1
 137   1          IAPAL ++;
 138   1          IAPCN = CFG_READ;
 139   1          Trigger_IAP();
 140   1          *pu8CFG1 = IAPFD;
 141   1      
 142   1          //Read CONFIG2
 143   1          IAPAL ++;
 144   1          IAPCN = CFG_READ;
 145   1          Trigger_IAP();
 146   1          *pu8CFG2 = IAPFD;
 147   1      
 148   1          //Read CONFIG3
 149   1          IAPAL ++;
 150   1          IAPCN = CFG_READ;
 151   1          Trigger_IAP();
 152   1          *pu8CFG3 = IAPFD;
 153   1      
 154   1          //Read CONFIG4
 155   1          IAPAL ++;
 156   1          IAPCN = CFG_READ;
 157   1          Trigger_IAP();
 158   1          *pu8CFG4 = IAPFD;
 159   1          
 160   1          Disable_IAP_Mode();
 161   1      }
 162          //--------------------------------------------------------------------------------------------------------
             ----
 163          void Erase_APROM(void)
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 4   

 164          {   
 165   1          UINT16 u16Count;
 166   1      
 167   1          Enable_IAP_Mode();
 168   1          
 169   1          IAPFD = 0xFF;    
 170   1          IAPCN = PAGE_ERASE_AP;
 171   1          
 172   1          set_APUEN;
 173   1          for(u16Count=0x0000;u16Count<DATA_SIZE/PAGE_SIZE;u16Count++)
 174   1          {        
 175   2              IAPAL = LOBYTE(u16Count*PAGE_SIZE + DATA_START_ADDR);
 176   2              IAPAH = HIBYTE(u16Count*PAGE_SIZE + DATA_START_ADDR);
 177   2              Trigger_IAP(); 
 178   2          } 
 179   1          clr_APUEN;
 180   1          
 181   1          Disable_IAP_Mode();
 182   1      }
 183          //--------------------------------------------------------------------------------------------------------
             ----
 184          BIT Erase_APROM_Verify(void)
 185          {   
 186   1          UINT16 u16Count;
 187   1          BIT    Error_Flag = 0;
 188   1      
 189   1          Enable_IAP_Mode();
 190   1          
 191   1          IAPAL = LOBYTE(DATA_START_ADDR);
 192   1          IAPAH = HIBYTE(DATA_START_ADDR);
 193   1          IAPCN = BYTE_READ_AP;
 194   1      
 195   1          for(u16Count=0;u16Count<DATA_SIZE/PAGE_SIZE;u16Count++)
 196   1          {   
 197   2              IAPFD = 0x00;    
 198   2              Trigger_IAP();
 199   2      
 200   2              if(IAPFD != 0xFF)
 201   2              {
 202   3                  Error_Flag = 1;
 203   3                  break;
 204   3              }
 205   2      
 206   2              IAPAL++;
 207   2              if(IAPAL == 0x00)
 208   2              {
 209   3                  IAPAH++;
 210   3              }
 211   2          } 
 212   1          
 213   1          Disable_IAP_Mode();
 214   1          
 215   1          if(Error_Flag == 1)
 216   1              return FAIL;
 217   1          else
 218   1              return PASS;
 219   1      }
 220          //--------------------------------------------------------------------------------------------------------
             ----
 221          void Program_APROM(void)
 222          {   
 223   1          UINT16 u16Count;
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 5   

 224   1      
 225   1          Enable_IAP_Mode();
 226   1          
 227   1          IAPAL = LOBYTE(DATA_START_ADDR);
 228   1          IAPAH = HIBYTE(DATA_START_ADDR);
 229   1          IAPFD = 0xFF;
 230   1          IAPCN = BYTE_PROGRAM_AP;
 231   1          
 232   1          set_APUEN;
 233   1          for(u16Count=0;u16Count<DATA_SIZE;u16Count++)
 234   1          {   
 235   2              IAPFD++;     
 236   2              Trigger_IAP();
 237   2             
 238   2              IAPAL++;
 239   2              if(IAPAL == 0)
 240   2              {
 241   3                  IAPAH++;
 242   3              }
 243   2          } 
 244   1          clr_APUEN;
 245   1          
 246   1          Disable_IAP_Mode();
 247   1      }
 248          //--------------------------------------------------------------------------------------------------------
             ----
 249          BIT Program_APROM_Verify(void)
 250          {   
 251   1          UINT16 u16Count;
 252   1          UINT8  u8Read_Data;
 253   1          BIT    Error_Flag = 0;
 254   1      
 255   1          Enable_IAP_Mode();
 256   1          
 257   1          IAPAL = LOBYTE(DATA_START_ADDR);
 258   1          IAPAH = HIBYTE(DATA_START_ADDR);
 259   1          IAPCN = BYTE_READ_AP;
 260   1      
 261   1          u8Read_Data = 0x00;
 262   1      
 263   1          for(u16Count=0;u16Count<DATA_SIZE;u16Count++)
 264   1          {   
 265   2              Trigger_IAP();
 266   2              if(IAPFD != u8Read_Data)
 267   2              {
 268   3                  Error_Flag = 1;
 269   3                  break;
 270   3              }
 271   2      
 272   2              IAPAL++;
 273   2              if(IAPAL == 0)
 274   2              {
 275   3                  IAPAH++;
 276   3              }
 277   2              u8Read_Data ++;
 278   2          } 
 279   1      
 280   1          Disable_IAP_Mode();
 281   1           
 282   1          if(Error_Flag == 1)
 283   1              return FAIL;
 284   1          else
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 6   

 285   1              return PASS;
 286   1      }
 287          //--------------------------------------------------------------------------------------------------------
             ----
 288          void Program_CONFIG(UINT8 u8Address,UINT8 u8Data)
 289          {   
 290   1          Enable_IAP_Mode();
 291   1          
 292   1          IAPAL = u8Address;
 293   1          IAPAH = 0x00;
 294   1          IAPFD = u8Data;
 295   1          IAPCN = BYTE_PROGRAM_CFG;
 296   1          
 297   1          set_CFUEN;
 298   1          Trigger_IAP();
 299   1          clr_CFUEN;
 300   1          
 301   1          Disable_IAP_Mode();
 302   1      }
 303          //--------------------------------------------------------------------------------------------------------
             ----
 304          void Erase_CONFIG(void)
 305          {   
 306   1          Enable_IAP_Mode();
 307   1          
 308   1          IAPAL = 0x00;
 309   1          IAPAH = 0x00;
 310   1          IAPFD = 0xFF;
 311   1          IAPCN = CFG_ERASE;
 312   1          
 313   1          set_CFUEN;
 314   1          Trigger_IAP();
 315   1          clr_CFUEN;
 316   1          
 317   1          Disable_IAP_Mode();
 318   1      }
 319          //--------------------------------------------------------------------------------------------------------
             ----
 320          void ID_CONFIG_Read(void)
 321          {
 322   1          UINT8 u8CID,u8DID0,u8DID1;
 323   1          UINT8 u8CFG0,u8CFG1,u8CFG2,u8CFG3,u8CFG4;
 324   1          
 325   1          ID_Read(&u8CID,&u8DID0,&u8DID1);
 326   1          printf("\nCID  = 0x%X",(UINT16)u8CID);
 327   1          printf("\nDID0 = 0x%X",(UINT16)u8DID0);
 328   1          printf("\nDID1 = 0x%X",(UINT16)u8DID1);
 329   1      
 330   1          CONFIG_Read(&u8CFG0,&u8CFG1,&u8CFG2,&u8CFG3,&u8CFG4);
 331   1          printf("\nCFG0 = 0x%X",(UINT16)u8CFG0);
 332   1          printf("\nCFG1 = 0x%X",(UINT16)u8CFG1);
 333   1          printf("\nCFG2 = 0x%X",(UINT16)u8CFG2);
 334   1          printf("\nCFG3 = 0x%X",(UINT16)u8CFG3);
 335   1          printf("\nCFG4 = 0x%X",(UINT16)u8CFG4);
 336   1      }
 337          //--------------------------------------------------------------------------------------------------------
             ----
 338          void main (void) 
 339          {
 340   1          /* Note
 341   1             MCU power on system clock is HIRC (22.1184MHz), so Fsys = 22.1184MHz
 342   1          */
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 7   

 343   1          
 344   1          Set_All_GPIO_Quasi_Mode();
 345   1          InitialUART0_Timer1_Type1(9600);             /* 9600 Baud Rate*/
 346   1      
 347   1          Show_FW_Version_Number_To_PC();
 348   1          
 349   1          printf ("\n*===================================================================");
 350   1          printf ("\n*  Name: N76E885 IAP APROM Program APROM Demo Code.");
 351   1          printf ("\n*===================================================================\n");
 352   1          
 353   1          /* Change system closk source */
 354   1          #if SYS_CLK_EN == 1
                      #if   SYS_SEL == 0
                          System_Clock_Select(E_HXTEN);   //Fosc = 2~25MHz XTAL
                      #elif SYS_SEL == 1
                          System_Clock_Select(E_LXTEN);   //Fosc = 32.768KHz XTAL
                      #elif SYS_SEL == 2
                          System_Clock_Select(E_HIRCEN);  //Fosc = 22.1184MHz Internal RC
                      #elif SYS_SEL == 3
                          System_Clock_Select(E_LIRCEN);  //Fosc = 10KHz Internal RC
                      #elif SYS_SEL == 4
                          System_Clock_Select(E_OSCEN);   //Fosc = OSC-In External OSC
                      #endif
                  #endif
 367   1          
 368   1          #if SYS_DIV_EN == 1
                      CKDIV = SYS_DIV;                        //Fsys = Fosc / (2* CLKDIV) = Fcpu
                  #endif
 371   1          
 372   1          Set_All_GPIO_Quasi_Mode();
 373   1      
 374   1          DISPLAY_LED = 0x0F;
 375   1          Timer0_Delay1ms(200);
 376   1      
 377   1          Erase_CONFIG();
 378   1          ID_CONFIG_Read();
 379   1      
 380   1          printf ("\nErase APROM");
 381   1          Erase_APROM();
 382   1          printf ("\nAPROM Erase Verify");
 383   1          if(Erase_APROM_Verify() == FAIL)
 384   1          {
 385   2              DISPLAY_LED = ERASE_FAIL;
 386   2              printf ("\nAPROM Erase Fail.");
 387   2              while(1);
 388   2          }
 389   1          printf ("\nAPROM Erase Verify Pass");    
 390   1      
 391   1          printf ("\nAPROM Program");        
 392   1          Program_APROM();
 393   1          printf ("\nAPROM Program Verify");        
 394   1          if(Program_APROM_Verify() == FAIL)
 395   1          {
 396   2              DISPLAY_LED = PROGRAM_FAIL;
 397   2              printf ("\nAPROM Program Fail.");
 398   2              while(1);
 399   2          }
 400   1          printf ("\nAPROM Program Verify pass");        
 401   1        
 402   1      //    Program_CONFIG(0x00,0xCF);      //Program CONFIG0 =  0xCF;
 403   1      //    Program_CONFIG(0x01,0x0F);      //Program CONFIG1 =  0x0F;
 404   1      //    Program_CONFIG(0x02,0xF8);      //Program CONFIG2 =  0xF8;
C51 COMPILER V9.52.0.0   ISP_AP_AP                                                         05/02/2016 13:26:38 PAGE 8   

 405   1      //    Program_CONFIG(0x03,0x3F);      //Program CONFIG3 =  0x3F;
 406   1      //    Program_CONFIG(0x04,0xFF);      //Program CONFIG4 =  0x00;
 407   1        
 408   1          ID_CONFIG_Read();
 409   1          
 410   1          //Timer0_Delay1ms(200);
 411   1          
 412   1          printf ("\nAPROM program APROM Stop!!!"); 
 413   1          DISPLAY_LED = IAP_PASS;
 414   1      
 415   1          while(1);
 416   1      }
 417          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1043    ----
   CONSTANT SIZE    =    504    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
