C51 COMPILER V9.52.0.0   PWM                                                               07/06/2017 11:39:31 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Output\PWM.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\PWM.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_16000
                    -0) DEBUG OBJECTEXTEND PRINT(.\LST\PWM.lst) TABS(2) OBJECT(.\Output\PWM.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2017
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 PWM Output with dead time insert demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include "N76E003.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          #include "SFR_Macro.h"
  22          #include "Function_define.h"
  23          
  24          //*****************  The Following is in define in Fucntion_define.h  ***************************
  25          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  26          //***********************************************************************************************
  27          #if 0 
              ////--------- PMW clock source select define ---------------------
              //#define   PWM_CLOCK_FSYS          CKCON&=0xBF
              //#define   PWM_CLOCK_TIMER1        CKCON|=0x40
              ////--------- PWM clock devide define ----------------------------
              //#define   PWM_CLOCK_DIV_2         PWMCON1|=0x01;PWMCON1&=0xF9
              //#define   PWM_CLOCK_DIV_4         PWMCON1|=0x02;PWMCON1&=0xFA
              //#define   PWM_CLOCK_DIV_8         PWMCON1|=0x03;PWMCON1&=0xFB
              //#define   PWM_CLOCK_DIV_16        PWMCON1|=0x04;PWMCON1&=0xFC
              //#define   PWM_CLOCK_DIV_32        PWMCON1|=0x05;PWMCON1&=0xFD
              //#define   PWM_CLOCK_DIV_64        PWMCON1|=0x06;PWMCON1&=0xFE
              //#define   PWM_CLOCK_DIV_128       PWMCON1|=0x07
              ////--------- PWM I/O select define ------------------------------
              //#define   PWM5_P15_OUTPUT_ENABLE    BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1|=0x20;TA=0xAA;TA=0x5
             -5;SFRS&=0xFE;EA=BIT_TMP       //P1.5 as PWM5 output enable
              //#define   PWM5_P03_OUTPUT_ENABLE    PIOCON0|=0x20                                                   //P0.3 as PWM5
              //#define   PWM4_P01_OUTPUT_ENABLE    PIOCON0|=0x10                                                   //P0.1 as PWM4 output enable
              //#define   PWM3_P04_OUTPUT_ENABLE    BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1|=0x08;TA=0xAA;TA=0x5
             -5;SFRS&=0xFE;EA=BIT_TMP       //P0.4 as PWM3 output enable
C51 COMPILER V9.52.0.0   PWM                                                               07/06/2017 11:39:31 PAGE 2   

              //#define   PWM3_P00_OUTPUT_ENABLE    PIOCON0|=0x08                                                   //P0.0 as PWM3 
              //#define   PWM2_P05_OUTPUT_ENABLE    BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1|=0x04;TA=0xAA;TA=0x5
             -5;SFRS&=0xFE;EA=BIT_TMP       //P1.0 as PWM2 output enable
              //#define   PWM2_P10_OUTPUT_ENABLE    PIOCON0|=0x04                                                   //P1.0 as PWM2
              //#define   PWM1_P14_OUTPUT_ENABLE    BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1|=0x02;TA=0xAA;TA=0x5
             -5;SFRS&=0xFE;EA=BIT_TMP       //P1.4 as PWM1 output enable
              //#define   PWM1_P11_OUTPUT_ENABLE    PIOCON0|=0x02                                                   //P1.1 as PWM1 
              //#define   PWM0_P12_OUTPUT_ENABLE    PIOCON0|=0x01                                                   //P1.2 as PWM0 output enable
              //#define   ALL_PWM_OUTPUT_ENABLE     PIOCON0=0xFF;PIOCON1=0xFF
              //#define   PWM5_P15_OUTPUT_DISABLE   BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1&=0xDF;TA=0xAA;TA=0x
             -55;SFRS&=0xFE;EA=BIT_TMP        //P1.5 as PWM5 output disable
              //#define   PWM5_P03_OUTPUT_DISABLE   PIOCON0&=0xDF                                                   //P0.3 as PWM5
              //#define   PWM4_P01_OUTPUT_DISABLE   PIOCON0&=0xEF                                                   //P0.1 as PWM4 output disable
              //#define   PWM3_P04_OUTPUT_DISABLE   BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1&=0xF7;TA=0xAA;TA=0x
             -55;SFRS&=0xFE;EA=BIT_TMP        //P0.4 as PWM3 output disable
              //#define   PWM3_P00_OUTPUT_DISABLE   PIOCON0&=0xF7                                                   //P0.0 as PWM3 
              //#define   PWM2_P05_OUTPUT_DISABLE   BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1&=0xFB;TA=0xAA;TA=0x
             -55;SFRS&=0xFE;EA=BIT_TMP        //P1.0 as PWM2 output disable
              //#define   PWM2_P10_OUTPUT_DISABLE   PIOCON0&=0xFB                                                   //P1.0 as PWM2
              //#define   PWM1_P14_OUTPUT_DISABLE   BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=0x01;PIOCON1&=0xFD;TA=0xAA;TA=0x
             -55;SFRS&=0xFE;EA=BIT_TMP        //P1.4 as PWM1 output disable
              //#define   PWM1_P11_OUTPUT_DISABLE   PIOCON0&=0xFD                                                   //P1.1 as PWM1 
              //#define   PWM0_P12_OUTPUT_DISABLE   PIOCON0&=0xFE                                                   //P1.2 as PWM0 output disable
              //#define   ALL_PWM_OUTPUT_DISABLE    PIOCON0=0x00;PIOCON1=0x00
              ////--------- PWM I/O Polarity Control ---------------------------
              //#define   PWM5_OUTPUT_INVERSE     PNP|=0x20       
              //#define   PWM4_OUTPUT_INVERSE     PNP|=0x10       
              //#define   PWM3_OUTPUT_INVERSE     PNP|=0x08       
              //#define   PWM2_OUTPUT_INVERSE     PNP|=0x04       
              //#define   PWM1_OUTPUT_INVERSE     PNP|=0x02       
              //#define   PWM0_OUTPUT_INVERSE     PNP|=0x01       
              //#define   PWM_OUTPUT_ALL_INVERSE  PNP=0xFF
              //#define   PWM5_OUTPUT_NORMAL      PNP&=0xDF       
              //#define   PWM4_OUTPUT_NORMAL      PNP&=0xEF       
              //#define   PWM3_OUTPUT_NORMAL      PNP&=0xF7       
              //#define   PWM2_OUTPUT_NORMAL      PNP&=0xFB       
              //#define   PWM1_OUTPUT_NORMAL      PNP&=0xFD       
              //#define   PWM0_OUTPUT_NORMAL      PNP&=0xFE       
              //#define   PWM_OUTPUT_ALL_NORMAL   PNP=0x00
              ////--------- PWM type define ------------------------------------
              //#define   PWM_EDGE_TYPE           PWMCON1&=~SET_BIT4
              //#define   PWM_CENTER_TYPE         PWMCON1|=SET_BIT4
              ////--------- PWM mode define ------------------------------------
              //#define   PWM_IMDEPENDENT_MODE    PWMCON1&=0x3F
              //#define   PWM_COMPLEMENTARY_MODE  PWMCON1|=0x40;PWMCON1&=0x7F
              //#define   PWM_SYNCHRONIZED_MODE   PWMCON1|=0x80;PWMCON1&=0xBF
              //#define   PWM_GP_MODE_ENABLE      PWMCON1|=0x20
              //#define   PWM_GP_MODE_DISABLE     PWMCON1&=0xDF
              ////--------- PMW interrupt setting ------------------------------
              //#define   PWM_FALLING_INT         PWMCON0&=0xF3
              //#define   PWM_RISING_INT          PWMCON0|=0x04;PWMCON0&=0xF7
              //#define   PWM_CENTRAL_POINT_INT   PWMCON0|=0x08;PWMCON0&=0xFB
              //#define   PWM_PERIOD_END_INT      PWMCON0|=0x0C
              ////--------- PWM interrupt pin select ---------------------------
              //#define   PWM_INT_PWM0            PWMCON0&=0xFC
              //#define   PWM_INT_PWM2            PWMCON0|=0x01;PWMCON0&=0xFD
              //#define   PWM_INT_PWM4            PWMCON0|=0x02;PWMCON0&=0xFE
              //#define   PWM_INT_PMW6            PWMCON0|=0x03
              ////--------- PWM Dead time setting ------------------------------
              //#define   PWM45_DEADTIME_ENABLE     BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;PDTEN|=0x04;EA=BIT_TMP
              //#define   PWM34_DEADTIME_ENABLE     BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;PDTEN|=0x02;EA=BIT_TMP
              //#define   PWM01_DEADTIME_ENABLE     BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;PDTEN|=0x01;EA=BIT_TMP
C51 COMPILER V9.52.0.0   PWM                                                               07/06/2017 11:39:31 PAGE 3   

              #endif
 101          
 102          void PWM_DEAD_TIME_VALUE(UINT16 DeadTimeData)
 103          {
 104   1        UINT8 deadtmphigh,deadtmplow;
 105   1        deadtmplow = DeadTimeData;
 106   1        deadtmphigh = DeadTimeData>>8;
 107   1        BIT_TMP = EA;
 108   1        if (deadtmphigh==0x01)
 109   1        {
 110   2          EA = 0;
 111   2          TA = 0xAA;
 112   2          TA = 0x55;
 113   2          PDTEN|=0x10;
 114   2        }
 115   1        TA = 0xAA;
 116   1        TA = 0x55;
 117   1        PDTCNT = deadtmplow;
 118   1        EA = BIT_TMP;
 119   1      }
 120          //------------------- PWM Define End ------------------------------
 121          
 122          /*********************************************************************************************************
             -***
 123          *    Main function 
 124          *    PWM4 P0.5 simple output a 2.7KHz 1/4high duty signal
 125          **********************************************************************************************************
             -**/
 126          void main(void)
 127          {
 128   1          Set_All_GPIO_Quasi_Mode;
 129   1      /*--------------------------------------------------------------------------------------------------------
             ----------
 130   1        PWM frequency   = Fpwm/((PWMPH,PWMPL)+1) = (16MHz/8)/(0x7CF+1) = 1KHz (1ms)
 131   1        PWM4 high duty  = PWM4H,PWM4L = 0x01CF = 1/4 PWM period
 132   1        PWM0 high duty  = PWM0H,PMW0L = 0x03CF = 1/2 PWM period
 133   1        Dead time       = 0x1FF <PDTEN.4+PDTCNT[7:0]>/Fsys = 0x1FF/Fsys = 512/16000000 = 32 us (max value)
 134   1      ----------------------------------------------------------------------------------------------------------
             --------*/
 135   1          PWM0_P12_OUTPUT_ENABLE;
 136   1          PWM1_P11_OUTPUT_ENABLE;
 137   1          PWM4_P01_OUTPUT_ENABLE;
 138   1          PWM5_P15_OUTPUT_ENABLE;
 139   1      
 140   1        
 141   1          PWM_COMPLEMENTARY_MODE;         //Only this mode support deat time function
 142   1          PWM_CLOCK_DIV_8;
 143   1          PWMPH = 0x07;
 144   1          PWMPL = 0xCF;
 145   1      
 146   1          PWM0H = 0x03;
 147   1          PWM0L = 0xCF;
 148   1          set_SFRPAGE;                    // PWM4 and PWM5 duty value need set SFPPAGE 1
 149   1          PWM4H = 0x01;
 150   1          PWM4L = 0xCF;
 151   1          clr_SFRPAGE;
 152   1          
 153   1          PWM01_DEADTIME_ENABLE;
 154   1          PWM45_DEADTIME_ENABLE;
 155   1          PWM_DEAD_TIME_VALUE(0x1FF);     //value never over 0x1FF
 156   1          
 157   1      //Please always setting Dead time if needed before PWM run.   
C51 COMPILER V9.52.0.0   PWM                                                               07/06/2017 11:39:31 PAGE 4   

 158   1          set_LOAD;
 159   1          set_PWMRUN;
 160   1          while(1);   
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    208    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
